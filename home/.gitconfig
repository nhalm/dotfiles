
[gpg]
  format = ssh

[gpg "ssh"]
  program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"
	allowedSignersFile = /Users/nhalm/.ssh/allowed_signers

[commit]
  gpgsign = true

[url "ssh://git@github.com/"]
	insteadOf = https://github.com/

[alias]
	# reword the last commit
	amend = commit -a --amend

	# clean up all merged branches
	# not named the first argument.
	# if $1 not specified "master"
	# branch is used
	bclean = "!f() { git branch --merged ${1-dev} | grep -v " ${1-master}$" | xargs -r git branch -d; }; f"

	# get the branch name
	bn = "!git rev-parse --abbrev-ref HEAD"

	# simplified check out
	co = checkout

	# create new branch
	cob = checkout -b

	# checkout the last tag
	colasttag = "!f() { \
		git fetch \
		&& git co lasttag; \
		}; f"


	# push with force
	fpush = push --force

	# List all aliases
	la = "!git config -l | grep alias | cut -c 7-"

	# show last tag
	lasttag = describe --tags --abbrev=0

	# simplified log showing changes within commits
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat

	# simplified log result
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate

	# show last tag
	lt = describe --tags --abbrev=0

	# squash last commit
	sql = merge --squash HEAD@{2}

	# merge branch into current
	# if $1 not specified "dev"
	# branch is used
	mrgr = "!f() { \
		CURRENT=$(git bn) \
		&& git checkout ${1-dev} \
		&& git pull origin ${1-dev} \
		&& git co ${CURRENT} \
		&& git merge ${1-dev}; \
		}; f"

	pof = "!f() { \
		git fetch \
		&& git po; \
		}; f"

	po = "!f() { \
		CURRENT=$(git bn) \
		&& git pull origin ${CURRENT}; \
		}; f"

	upstage = "!f() { \
		git fetch \
		&& git co staging \
		&& git po; \
		}; f"

	upmain = "!f() { \
		git fetch \
		&& git co main \
		&& git po; \
		}; f"

	upmaster = "!f() { \
		git fetch \
		&& git co master \
		&& git po; \
		}; f"

	upprod = "!f() { \
		git fetch \
		&& git co production \
		&& git po; \
		}; f"

	publish = "!git push -u origin $(git bn)"

[user]
	name = Nick Halm
  signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIH2+EBv7VTaxBvCnuc2z2eL1XZQSf0bjeF1eYwF4Gaf2
[pull]
	rebase = true
[init]
	defaultBranch = main
[core]
	excludesfile = ~/.gitignore_global

[includeIf "gitdir:~/work/"]
	path = ~/.gitconfig-work

[includeIf "gitdir:~/dev/"]
	path = ~/.gitconfig-work

[includeIf "gitdir:~/personal/"]
	path = ~/.gitconfig-personal

[includeIf "gitdir:~/dotfiles/"]
	path = ~/.gitconfig-personal
